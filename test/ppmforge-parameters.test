#! /bin/sh
# This script tests: ppmforge
# Also requires: pamfile

echo "Test 1: Should print 256 256"

# Default size is 256 256
ppmforge -night | pamfile -size

echo "Test 2: Should print 40 30"

# Width is adjusted if not even
# becomes 40 in this case
ppmforge -night -width=39 -height=30 | pamfile -size

echo "Test 3: Should print 90 90"

# Width is adjusted if smaller than height
# brought up to 90 in this case
ppmforge -night -width=80 -height=90 | pamfile -size

echo "Test Invalid"

tmpdir=${tmpdir:-/tmp}
test_out=${tmpdir}/test_out

echo 1>&2
echo "Invalid command-line arguments." 1>&2
echo "Error messages should appear below the line." 1>&2
echo "-----------------------------------------------------------" 1>&2

ppmforge -night  -dimension=0  > ${test_out} || \
  echo -n "Expected failure 1"
  test -s ${test_out}; echo " "$?
  rm -f ${test_out}

ppmforge  -dimension=10  > ${test_out} || \
  echo -n "Expected failure 2"
  test -s ${test_out}; echo " "$?
  rm -f ${test_out}

ppmforge  -dimension=-1  > ${test_out} || \
  echo -n "Expected failure 3"
  test -s ${test_out}; echo " "$?
  rm -f ${test_out}

ppmforge -clouds -mesh=1.99    > ${test_out} || \
  echo -n "Expected failure 4"
  test -s ${test_out}; echo " "$?
  rm -f ${test_out}

ppmforge -clouds -power=0      > ${test_out} || \
  echo -n "Expected failure 5"
  test -s ${test_out}; echo " "$?
  rm -f ${test_out}

ppmforge         -ice=-1       > ${test_out} || \
  echo -n "Expected failure 6"
  test -s ${test_out}; echo " "$?
  rm -f ${test_out}

ppmforge         -glaciers=-1  > ${test_out} || \
  echo -n "Expected failure 7"
  test -s ${test_out}; echo " "$?
  rm -f ${test_out}
